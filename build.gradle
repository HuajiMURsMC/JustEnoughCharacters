plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
}

version = "${minecraft_version}-${verspec}.${verbuild}"
group = "me.towdium.jecharacters"
archivesBaseName = "jecharacters-fabric"

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven {
        name = "Jared's maven"
        url = "https://maven.blamejared.com/"
    }
    maven { url 'https://jitpack.io' }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        content {
            includeGroup 'appeng'
        }
    }
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings(loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_mappings}@zip")
    })


    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.github.Towdium:PinIn:${verpinin}"
    include "com.github.Towdium:PinIn:${verpinin}"

    modImplementation "mezz.jei:jei-${minecraft_version}-fabric:${jei_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    withSourcesJar()
}


/*
minecraft.runs.all {
    lazyToken('minecraft_classpath') {
        configurations.shade.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
    }
}

 */

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

apply from : 'generate.gradle'

build.dependsOn generate
